# palabre.conf
# Main config file for Palabre

[daemon]
# startdaemon - if 'false', don't start in daemon mode
# and send the log to the console as well as to the log file
# useful with loglevel = debug
# default: true

startdaemon = false

# pidfile - pid file path 
# default: /var/run/palabre.pid
# Not used under windows, only for UNIX services

pidfile = /var/run/palabre.pid

# ip - uncomment the following to bind Palabre to a specific ip
# ex: ip = 192.168.1.25
# default (commented or empty): all

ip = 127.0.0.1

# port - uncomment the following to bind Palabre to a specific port
# ex: port = 9876
# default (commented or empty): 2468

port = 2468

[logging]
# loglevel - one of: debug, info, warning, error, critical
# default: info

loglevel = info

# logfile - log file path
# default: /var/log/palabre.log
# logfile = ./palabre.log
# If empty Palabre will print every messages in the console

logfile = 


[admin]
# password - uncomment the following to allow root connection
# (useful for some administrative tasks)
# make sure only Palabre admins have access to this file
# ex: password = MetsTaCarpe
# default (commented or empty): no root connection allowed

password = 

[crossdomain]
# List domains allowed to connect to this server (separated by spaces)
# Load through : System.security.loadPolicyFile("xmlsocket://foo.com:414");
#

alloweddomains = domainthatdoesnotexist.bar otherinexistantdomain.foo


[database]
# If you want to check password to database 
# checkpassword = true

usedatabase = false
checkpassword = true

# Database informations for ADODB

# dbType : Possible Values : any from ADODB : mysql, postgres, sqlite, odbc, ...
# But you need the correct module + Adodb to go on ...

dbType = mysql
dbHost = 192.168.1.234
dbUser = root
dbPassword = secret
dbDatabase = test

# Request to use : 
# use [LOGIN] and [PASSWORD] for the replacements WITHOUT QUOTES AROUND 
# Adodb Will auto quote it
# XML connect node must be : <connect nickname="toto" password="str0ngp4ss" />
# Ex : dbRequest = SELECT * FROM t_logins WHERE login_nickname LIKE [LOGIN] AND login_password LIKE MD5([PASSWORD])

dBRequest = SELECT * FROM t_logins WHERE login_nickname LIKE [LOGIN] AND login_password LIKE MD5([PASSWORD])


[modules]

list = dbQueries,helloworld,simpleLogin


